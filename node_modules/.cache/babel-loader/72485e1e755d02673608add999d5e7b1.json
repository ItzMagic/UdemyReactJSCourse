{"ast":null,"code":"import _classCallCheck from \"/Users/evanlondono/Desktop/Udemy/reactCourse/learnreact/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/evanlondono/Desktop/Udemy/reactCourse/learnreact/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/evanlondono/Desktop/Udemy/reactCourse/learnreact/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/evanlondono/Desktop/Udemy/reactCourse/learnreact/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/evanlondono/Desktop/Udemy/reactCourse/learnreact/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/evanlondono/Desktop/Udemy/reactCourse/learnreact/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Options from './Options/Options';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        name: \"Coolboy55 \",\n        inputContent: ''\n      }],\n      counter: '' // this.setAuthorState.bind(this)}\n\n    };\n\n    _this.storeTxtArea = function (event) {\n      console.log(event.target.value);\n      var txtAreaCharacterCount = event.target.value.length;\n      console.log(txtAreaCharacterCount);\n\n      _this.setState({\n        persons: [{\n          name: \"Coolboy55 \"\n        }, {\n          name: \"Brrrrr \"\n        }, {\n          name: \"we just changed the state of this app when you click the button \"\n        }],\n        counter: txtAreaCharacterCount\n      });\n    };\n\n    _this.switchNameHandler = function () {\n      console.log(' switchNameHandler was clicked!');\n\n      _this.setState({\n        persons: [{\n          name: \"we just changed the state of this app when you click the button  \"\n        }]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.switchNameHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"switch Name Handler\")), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Hi this is a React App\"), React.createElement(Options, {\n        word: this.state.persons[0].name,\n        price: \"$20 and a box of pizza and moutian dew\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Text between Options's element tags are called children\"), React.createElement(\"input\", {\n        className: \"input\",\n        onChange: this.storeTxtArea,\n        placeholder: \"Insert your thoughts about anything in here\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.counter));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/evanlondono/Desktop/Udemy/reactCourse/learnreact/src/App.js"],"names":["React","Component","Options","App","state","persons","name","inputContent","counter","storeTxtArea","event","console","log","target","value","txtAreaCharacterCount","length","setState","switchNameHandler"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAM;AACJC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,IAAI,EAAE,YAAR;AACEC,QAAAA,YAAY,EAAE;AADhB,OADO,CADL;AAMHC,MAAAA,OAAO,EAAE,EANN,CAQN;;AARM,K;;UAYNC,Y,GAAe,UAACC,KAAD,EAAW;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACA,UAAMC,qBAAqB,GAAGL,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBE,MAAjD;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,qBAAZ;;AACE,YAAKE,QAAL,CAAc;AACZZ,QAAAA,OAAO,EAAE,CAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAF,EAA0B;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAA1B,EAA+C;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAA/C,CADG;AAEZE,QAAAA,OAAO,EAAEO;AAFG,OAAd;AAIH,K;;UAEDG,iB,GAAoB,YAAM;AACxBP,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AACA,YAAKK,QAAL,CAAc;AACZZ,QAAAA,OAAO,EAAE,CACP;AAAEC,UAAAA,IAAI,EAAE;AAAR,SADO;AADG,OAAd;AAIC,K;;;;;;;6BACM;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAQ,QAAA,OAAO,EAAE,KAAKY,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJF,EAKE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAI,KAAKd,KAAL,CAAWC,OAAX,CAAmB,CAAnB,EAAsBC,IAAvC;AAA6C,QAAA,KAAK,EAAG,wCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEALF,EAME;AAAO,QAAA,SAAS,EAAC,OAAjB;AAA0B,QAAA,QAAQ,EAAE,KAAKG,YAAzC;AAAuD,QAAA,WAAW,EAAC,6CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKL,KAAL,CAAWI,OAAjB,CAPF,CADF;AAWD;;;;EA1CeP,S;;AA6ClB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Options from './Options/Options';\n\nclass App extends Component {\n  state={\n    persons: [\n      { name: \"Coolboy55 \",\n        inputContent: ''\n      }\n    ],\n     counter: ''  \n  }\n  // this.setAuthorState.bind(this)}\n  \n  \n\n  storeTxtArea = (event) => {\n    console.log(event.target.value)\n    const txtAreaCharacterCount = event.target.value.length\n    console.log(txtAreaCharacterCount)\n      this.setState({\n        persons: [ { name: \"Coolboy55 \" }, { name: \"Brrrrr \" }, { name: \"we just changed the state of this app when you click the button \" }],\n        counter: txtAreaCharacterCount      \n      })\n  }\n\n  switchNameHandler = () => {\n    console.log(' switchNameHandler was clicked!');\n    this.setState({\n      persons: [\n        { name: \"we just changed the state of this app when you click the button  \" }],\n      })\n    }\n  render() {\n    return (\n      <div className=\"App\">\n        <p><button onClick={this.switchNameHandler}>switch Name Handler</button></p>\n\n\n        <h1>Hi this is a React App</h1>\n        <Options word=  {this.state.persons[0].name} price = \"$20 and a box of pizza and moutian dew\">Text between Options's element tags are called children</Options>\n        <input className=\"input\"  onChange={this.storeTxtArea} placeholder=\"Insert your thoughts about anything in here\"></input>  \n        <div>{this.state.counter}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}